name: CMake

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  components-changed:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      LOGR_changed: ${{ steps.filter.outputs.LOGR }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            LOGR:
              - 'LOGR/**'

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-type: [RelWithDebInfo, Debug]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} -j

      # Permissions are not preserved otherwise:
      - run: tar czf build.tar.gz ./build

      - name: Upload build dir
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-${{matrix.build-type}}
          path: build.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        build-type: [RelWithDebInfo, Debug]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download build
        uses: actions/download-artifact@v5
        with:
          name: build-${{matrix.build-type}}

      - run: tar xzf build.tar.gz

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build-type}} --output-on-failure --label-exclude known-fail --timeout 5

      - name: Test known failures
        working-directory: ${{github.workspace}}/build
        run: ${{github.workspace}}/.github/workflows/cmake-known-fails.bash ${{matrix.build-type}}

      - name: Upload known failures that passed
        uses: actions/upload-artifact@v4.6.2
        with:
          name: known-fail-passed-${{matrix.build-type}}-comment
          path: ${{github.workspace}}/build/known-fail-passed-*-comment.txt
          if-no-files-found: ignore

  LOGR-perf-test:
    runs-on: ubuntu-latest
    needs: components-changed
    if: needs.components-changed.outputs.LOGR_changed == 'true'

    steps:
      # Baseline build & test
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ github.base_ref }}

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=RelWithDebInfo

      - name: LOGR performance baseline
        working-directory: ${{github.workspace}}/build
        run: cmake --build . -j --target LOGR_perf_baseline

      - run: sleep 5

      # Changed build & test
      - run: git checkout ${{ github.head_ref }}

      - name: LOGR performance test
        id: test
        working-directory: ${{github.workspace}}/build
        run: cmake --build . -j --target LOGR_perf_test

      - name: Upload LOGR performance comment
        if: always() && steps.test.conclusion != 'skipped'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: LOGR-perf-comment
          path: ${{github.workspace}}/build/LOGR_perf_comment.md
          if-no-files-found: ignore
